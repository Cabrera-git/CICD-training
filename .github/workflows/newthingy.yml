name: A01025453

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: "3.10"
  
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r python/requirements.txt
  
      - name: Linting
        run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Run unit tests
        run: pytest python/tests/test.py

  build_package:  
    if: ${{ github.event_name != 'pull_request' }}      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Create ZIP FILE
        run: |
          RUN_ENV=dev 
          zip my-app.zip python/functions/app.py python/requirements.txt

  build_docker_image:
    if: ${{ github.event_name != 'pull_request' }}      
    needs: 
        - build_package

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build and tag image
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: g2c3v4e1/cicd/testing
          IMAGE_TAG: latest
        with:
          context: ./python
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          outputs: type=docker,dest=/tmp/${{ env.IMAGE_TAG }}.tar

      - name: Save image
        uses: actions/upload-artifact@v3
        env:
          IMAGE_TAG: latest
        with:
          name: ${{ env.IMAGE_TAG }}
          path: /tmp/${{ env.IMAGE_TAG }}.tar

  push_to_ecr:
    if: ${{ github.event_name != 'pull_request' }}      
    needs: 
        - build_docker_image
        - build_package
        
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Tag Docker image
        run: |
            docker tag myimage:latest public.ecr.aws/g2c3v4e1/cicd/testing:latest
            docker tag myimage:latest public.ecr.aws/g2c3v4e1/cicd/testing:python

      - name: Push Docker image to ECR
        run: |
          docker push public.ecr.aws/g2c3v4e1/cicd/testing:latest
          docker push public.ecr.aws/g2c3v4e1/cicd/testing:A01025453

