name: A01025453

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: "3.10"
  
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r python/requirements.txt
  
      - name: Linting
        run: flake8 --config .flake8

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Run unit tests
        run: pytest python/tests/test.py

      - name: Generate code coverage report
        run: coverage run --source=func -m pytest
        working-directory: python

      - name: Show code coverage report
        run: coverage report

  build_package:  
    if: ${{ github.event_name != 'pull_request' }}      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Build package
        run: tools build -o package.zip

  build_docker_image:
    if: ${{ github.event_name != 'pull_request' }}      
    needs: 
        - build_package

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t myimage .

  push_to_ecr:
    if: ${{ github.event_name != 'pull_request' }}      
    needs: 
        - build_docker_image
        - build_package
        
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Tag Docker image
        run: |
          docker tag myimage:latest public.ecr.aws/g2c3v4e1/cicd/testing:latest
          docker tag myimage:latest public.ecr.aws/g2c3v4e1/cicd/testing:python

      - name: Push Docker image to ECR
        run: |
          docker push public.ecr.aws/g2c3v4e1/cicd/testing:latest
          docker push public.ecr.aws/g2c3v4e1/cicd/testing:python

